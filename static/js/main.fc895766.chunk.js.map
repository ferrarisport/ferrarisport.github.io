{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","instance","SexByRussianName","year","Date","getFullYear","useState","resultText","setResult","slangName","setName","loading","setLoading","copied","setCopy","shareModalOpend","setModalOpend","maleSlang","femaleSlang","randomInteger","min","max","rand","Math","random","floor","Pane","height","isMobileOnly","display","alignItems","justifyContent","border","textAlign","style","padding","Heading","size","color","fontWeight","marginTop","TextInput","placeholder","float","marginRight","onChange","e","target","value","disabled","IconButton","id","isLoading","appearance","onClick","setTimeout","newName","toUpperCase","substring","resText","getSex","firstName","length","toLowerCase","iconBefore","background","maxWidth","Text","Dialog","isShown","title","onCloseComplete","confirmLabel","hasCancel","TelegramShareButton","url","children","TelegramIcon","borderRadius","round","WhatsappShareButton","WhatsappIcon","EmailShareButton","EmailIcon","VKShareButton","VKIcon","text","onCopy","Button","marginLeft","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"uWAiBe,SAASA,IAEtB,IAAIC,EAAW,IAAIC,mBACfC,GAAO,IAAIC,MAAOC,cAHM,EAIEC,mBAAS,MAJX,mBAIvBC,EAJuB,KAIXC,EAJW,OAKDF,mBAAS,MALR,mBAKvBG,EALuB,KAKZC,EALY,OAMAJ,oBAAS,GANT,mBAMvBK,EANuB,KAMdC,EANc,OAOJN,oBAAS,GAPL,mBAOvBO,EAPuB,KAOfC,EAPe,OAQWR,oBAAS,GARpB,mBAQvBS,EARuB,KAQNC,EARM,KAUxBC,EAAY,CACd,iCACA,uCACA,mDACA,sEACA,wFACA,uEACA,4EACA,8CACA,gJACA,iPACA,kFACA,8FACA,kKACA,0GACA,oGACA,8FACA,oDACA,sEACA,oGACA,6HACA,mEACA,8FACA,oGACA,8EACA,4EACA,0DACA,yFACA,4EACA,yDACA,sEACA,gEACA,mDACA,0DACA,mDACA,mFACA,mFACA,kFACA,oGACA,+FACA,oGACA,qGACA,kFACA,0DACA,sDACA,0DACA,8EACA,iCACA,4EACA,4EACA,8FACA,oGACA,6CACA,0DACA,8FACA,6FACA,oGACA,gHACA,uCACA,kFACA,8FACA,6CACA,2EACA,0DACA,sHACA,mDACA,6CACA,oGACA,kFACA,8FACA,kCAGIC,EAAc,CAClB,qGACA,4NACA,yEACA,oHACA,uJACA,gNACA,+PACA,mZACA,kSACA,0KACA,8aACA,yLACA,ycACA,4UACA,4TACA,2NACA,+TACA,oRACA,wYACA,mRACA,+LACA,+QACA,sDACA,iRACA,oMACA,wZACA,+MACA,kSACA,ycACA,oKACA,iUACA,iTACA,qQACA,0SACA,wRACA,8HACA,6TACA,yXACA,6PACA,wTACA,2RACA,4MACA,2NACA,kUACA,iUACA,6XACA,wZACA,qcACA,2cACA,mjBACA,qVACA,2SACA,+YACA,ySACA,kfACA,4NACA,oVACA,uQACA,8fACA,kWACA,6PACA,ubACA,+cACA,glBACA,0UACA,mPACA,uTACA,mHACA,wMACA,uNACA,8OACA,6SACA,iNACA,0XACA,yVACA,gRACA,sJACA,8YACA,iOACA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","file":"static/js/main.fc895766.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Pane, Heading, Text, TextInput, IconButton, Button, Dialog } from 'evergreen-ui';\nimport { SexByRussianName } from 'sex-by-russian-name';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { isMobileOnly } from \"react-device-detect\";\nimport {\n  EmailShareButton,\n  TelegramShareButton,\n  WhatsappShareButton,\n  EmailIcon,\n  VKShareButton,\n  TelegramIcon,\n  WhatsappIcon,\n  VKIcon\n} from \"react-share\";\nimport './App.css';\n\nexport default function App() {\n\n  let instance = new SexByRussianName();\n  let year = new Date().getFullYear();\n  let [resultText, setResult] = useState(null);\n  let [slangName, setName] = useState(null);\n  let [loading, setLoading] = useState(false);\n  let [copied, setCopy] = useState(false);\n  let [shareModalOpend, setModalOpend] = useState(false);\n\n  let maleSlang = [\n    'кизяк',\n    'чепуха',\n    \"ЧУХОБЛОХ\",\n    \"ёканый бабай\",\n    \"чилим одноногий\",\n    \"не гони пургу\",\n    \"спокойно хрящ\",\n    \"без пены\",\n    \"вот жешь залупадрянь какая\",\n    \"А у тебя харя не треснет по диагонали зигзагом?!\",\n    \"идрит-ангидрит\",\n    \"козёл кривоногий\",\n    \"конь педальный-ишак бухарский\",\n    \"шалашовка рублёвая\",\n    \"дичь покорябанная\",\n    \"плешка тараканья\",\n    \"Ешкин кот\",\n    \"мышкин хобот\",\n    \"индюк малосольный\",\n    \"бздюлина от будильника\",\n    \"в рот те ноги!\",\n    \"хамка трамвайная\",\n    \"зенленый пиписоид\",\n    \"Бяка - саколяка\",\n    \"Ешкин-крошкин\",\n    \"ёшкин дрын\",\n    \"Ворона — пляжная\",\n    \"чума-болотная\",\n    \"глупендяй\",\n    \"нерпа глупая\",\n    \"Едрёна вошь\",\n    \"Стерлядь\",\n    \"Бляха муха\",\n    \"Чучундра\",\n    \"Клизьма в ботах\",\n    \"Моль в обмороке\",\n    \"Жаба вислоухая\",\n    \"Кикимора болотная\",\n    \"Поганка с полянки\",\n    \"пьянь гидролизная\",\n    \"тумбочка с начесом\",\n    \"еперный театер\",\n    \"ёк-макарек\",\n    \"йопа - мама\",\n    \"йошкин кот\",\n    \"ну ни хряк себе\",\n    \"пипец\",\n    \"блин-блинский\",\n    \"потеря-потерь\",\n    \"подстава-подстав\",\n    \"дурилка картонная\",\n    \"ПЛЕСЕНЬ\",\n    \"вошь сивая\",\n    \"Фуфел мокрожопый\",\n    \"дристопердежник\",\n    \"выпердыш кровавый\",\n    \"перхоть подритузная\",\n    \"КАБУЧА\",\n    \"старая каманча\",\n    \"гоблин вислоухий\",\n    \"Дурында\",\n    \"Чебуракнулся\",\n    \"япона мать\",\n    \"Чепушок доморощенный\",\n    \"чепушила\",\n    \"Чувырла\",\n    \"ВОНЬ ПОДРЕЙТУЗНАЯ\",\n    \"плесень старая\",\n    \"сиська тараканья\",\n    \"упырь\"\n  ];\n\n  const femaleSlang = [\n    \"Ты обворожительна!\",\n    \"Ты будто сошла со страниц красивой сказки!\",\n    \"Ты – мой идеал!\",\n    \"Ты красива, как богиня!\",\n    \"Ты – произведение искусства!\",\n    \"Ты легка, как весенний утренний ветерок.\",\n    \"С тобой хорошо и легко, будто я сам наедине с собой.\",\n    \"Твои глаза – два бездонных океана, в которых я готов утонуть прямо в эту минуту!\",\n    \"Ты умна и красива, разве так может быть это одновременно?\",\n    \"Ты так ухожена и привлекательна!\",\n    \"В тебе столько нежности, это меня привлекает и делает тебя невероятно женственной!\",\n    \"Ты – клад, который мне повезло найти!\",\n    \"Когда ты рядом, я забываю о всех своих проблемах и причина тому эта невероятная легкость!\",\n    \"Ты настоящая муза, которая дает силы и вдохновение для шедевров!\",\n    \"Ни в коем случае ничего не меняй в себе, ты просто божественна!\",\n    \"О такой красавице, как ты, я даже и не мечтал!\",\n    \"Я настоящий везунчик, ведь мне повезло встретить именно тебя!\",\n    \"У тебя самая привлекательная и милая улыбка на свете!\",\n    \"Ты так меня понимаешь, будто читаешь все мои мысли и это так сводит меня с ума!\",\n    \"Твои черты списаны с самых лучших картин художников!\",\n    \"Ты свежа и красива, как розовый бутон!\",\n    \"Ни один цветок в мире не сравниться с твоей красотой.\",\n    \"Ты – песня!\",\n    \"Когда ты смотришь на меня, я забываю обо всем на свете!\",\n    \"Не могу отвести глаз от твоей красоты!\",\n    \"Ты такая уточенная, такая изысканная и красивая, я не могу тобой не восхищаться!\",\n    \"Быть такой красивой – это преступление!\",\n    \"Боюсь, что тебя могут просто украсть из-за твоей красоты!\",\n    \"Не могу подобрать слов, олицетворяющих твою красоту, ведь в словаре их просто не хватает!\",\n    \"От твоей красоты темнеют глаза!\",\n    \"С годами твоя красота не блекнет, а лишь обретает новые краски!\",\n    \"Твоя красота заставляет чувствовать меня на вершине мира!\",\n    \"Твоя красота заставляет чувствовать меня пьяным.\",\n    \"Твои глаза – настоящий магнит и я не могу не смотреть в них!\",\n    \"Не переставай улыбаться, твоя улыбка обворожительна!\",\n    \"Ты настоящее сокровище!\",\n    \"Ты даже без какой-либо косметики выглядишь сногсшибательно!\",\n    \"Ты не воровка? Ведь совершенно бесстыдно ты украла все мои мысли и сердце!\",\n    \"Когда я смотрю на тебя, я просто теряю реальность!\",\n    \"У тебя космическая, невероятная и просто сказочная красота!\",\n    \"Ты такая красивая, что я боюсь расплакаться от счастья!\",\n    \"Ты звезда, которая упала с неба на землю!\",\n    \"Как совершенна и безупречна твоя красота!\",\n    \"Твоя красота, так же свежа и необходима мне, как глоток воздуха!\",\n    \"Порой мне кажется, что красивей тебя нет никого на белом свете!\",\n    \"Спасибо, что позволяешь быть рядом с тобой и наслаждаться твоей красотой!\",\n    \"Мне кажется, что все красивые стихи и песни сложены только о твоей лишь красоте.\",\n    \"Никогда не сомневайся в своей привлекательности, ведь твоей красоте можно завидовать!\",\n    \"Я уверен, что сотни женщин не спят ночами и только и мечтают иметь хоть тень твоей красоты!\",\n    \"Если бы ты участвовала в конкурсах красоты, они бы потеряли свою значимость, ведь победа всегда была бы твоей!\",\n    \"Твой голос, словно музыка, а черты лица, как пейзажи красот природы!\",\n    \"Твои черты выточены самыми искусными ювелирами на свете!\",\n    \"Даже самый большой и глубокий океан не сравниться с величиной твоей красоты!\",\n    \"Как же мне повезло, ведь ты даришь свою красоту только мне.\",\n    \"От такой красоты могут в досаде разбиваться зеркала, злясь на твою безупречность и идеальность!\",\n    \"Ты – настоящая красотка и просто прелесть!\",\n    \"Всегда будь уверена в себе, ведь такой красоты я не встречал ранее!\",\n    \"Словно бриллиант, твоя красота уникальна и дорога!\",\n    \"Твоя кожа такая белоснежная, губы такие мягкие, глаза такие яркие, что я не могу отвести от тебя глаз!\",\n    \"Если бы я был поэтом, я бы сложил целый сборник стихов о твоей красоте!\",\n    \"Ты – подарок жизни, очень красивый и самый лучший!\",\n    \"В жизни не видел таких красивых длинных волос, чистой сияющей кожи и тонких черт лица!\",\n    \"Не хочу даже моргать, чтобы не пропустить и секунды, наблюдая за твоими красивыми чертами!\",\n    \"Можно хранить твою фотографию на прикроватном столике, чтобы любоваться прекраснейшими чертами круглосуточно?\",\n    \"Как искусно ты подбираешь гардероб, ты выглядишь замечательно!\",\n    \"Нежнее и красивее пальцев, чем у тебя, я не видел!\",\n    \"Нет, я не знаю слов, что моги бы описать твои прекрасные черты!\",\n    \"Ты – воплощение мечты!\",\n    \"Твоя красота заставляет сиять солнце!\",\n    \"Глаза твои ярче всех звезд на ночном небе!\",\n    \"Ты обладаешь небесной красотой и тонким умом!\",\n    \"Даже слепому не нужны очки, чтобы разглядеть твою красоту!\",\n    \"Нет тебя прекраснее, ты как солнце ясная!\",\n    \"Улыбайся чаще, ведь небо хмурится только от того, что не видит твою улыбку!\",\n    \"Самая красивая музыка в мире сложена только о тебе и твоей красоте.\",\n    \"Глядя на тебя, по телу бегут мурашки от твоей красоты!\",\n    \"Твоя красота обезоруживает!\",\n    \"Где же твой нимб? Ты ангел, не иначе! Обычны женщины не бывают такими красивыми!\",\n    \"Спасибо тебе за такую совершенную красоту!\",\n    \"Я хочу любоваться тобой 24 часа в сутки! Ты прекрасна!\",\n    \"Мама говорила мне, что в мире существуют красивые женщины, но молчала о том, что они могут быть прекрасными!\",\n    \"Вас зовут не Афродита?\",\n    \"Мне стыдно стоять рядом с тобой, ведь я блекну в сравнении с твоей красотой!\",\n    \"Невероятно! Твоя красота дарована Богом, ты знала о том, что ты его любимица?\",\n    \"Все бы отдал, чтобы быть таким красивым, как ты, несмотря на то, что я мужчина!\",\n    \"Твоих черт мне не забыть никогда! Ты просто незабываема!\",\n    \"Даже ангелы завистливо глядят на тебя с небес, любуясь неземной красотой!\",\n    \"Ты прекраснее огня, воды, неба, природы!\",\n    \"Не знаю, что именно меня так восхищает в тебе, но я готов пасть к твоим ногам и стать вечным рабом твоей красоты.\",\n    \"Пожалуйста, скажи мне, что я смогу любоваться твоей красотой вечно!\",\n    \"Ты так красива! С тебя только картины писать!\",\n    \"Будь красота сладкой на вкус, я бы уже давно заболел сахарным диабетом рядом с тобой!\",\n    \"Я непременно должен поблагодарить твоих родителей, за то, что они произвели на свет такую красоту!\",\n    \"Будь я жюри на конкурсе красоты, я бы был необъективен, ведь другие женщины по сравнению с тобой, просто безобразны!\",\n    \"Как изящен весь твой образ и как совершенны твои черты, словно ты божество, получившее физическое тело!\",\n    \"Ты знаешь, почему я все время улыбаюсь? Я просто не могу скрыть восхищения, глядя на тебя!\",\n    \"Нет, тебе подобных точно нет в этом мире. Ты самая лучшая и самая красивая. Однозначно!\",\n    \"Несомненно, ты родилась только для того, чтобы дарить красоту этому миру!\",\n    \"В тебе нет изъянов и даже то, что ты считаешь недостатками – достоинства в глазах других людей!\",\n    \"Красивей тебя может быть только твоя дочь!\"\n  ];\n\n  let randomInteger = (min, max) => { \n    let rand = min + Math.random() * (max + 1 - min);\n    return Math.floor(rand);\n  };\n\n  let mainPool = ()=>{\n    \n    if(slangName){\n      \n      setLoading(true);\n      setTimeout(()=>{\n        let newName = slangName[0].toUpperCase()+slangName.substring(1), res = instance.getSex({firstName: newName}), resText = '';\n        switch(res){\n          case('male'):{\n            resText = newName + \", \" + maleSlang[randomInteger(0, maleSlang.length-1)].toLowerCase()+\"!\";\n            break;\n          }\n          case('female'):{\n            resText = newName + \", \" + femaleSlang[randomInteger(0, femaleSlang.length-1)].toLowerCase();\n            break;\n          }\n          default : {\n            resText = \"Такого имени не существует!\";\n            break;\n          }\n        }\n        setResult(resText);\n        setCopy(false);\n        setLoading(false);\n      },750);\n    }\n  };\n  \n  return (\n    <Pane\n      height={isMobileOnly ? 'calc(100vh - 60px)' : '100vh'}\n      display=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      border=\"default\"\n      textAlign=\"center\"\n    >\n      <div style={{padding : '16px'}}>\n        <div>\n          <Heading size={900} style={{color : \"#116AB8\", fontWeight : 'bold'}}>SlangFriend</Heading>\n        </div>\n        <div style={{marginTop : '20px'}}>\n          <TextInput\n            placeholder=\"Введи имя тут...\"\n            float=\"left\"\n            style={{marginRight : '5px'}}\n            onChange={e => setName(e.target.value)}\n            disabled={loading}\n          />\n          <IconButton id=\"noMargButton\" isLoading={loading} appearance=\"primary\" onClick={()=>{mainPool();}} iconBefore={!loading ? ((!resultText || !slangName) ? \"lightbulb\" : \"refresh\") : 'none'}/>\n        </div>\n        {resultText && !loading &&\n          <Pane\n            textAlign='center'\n            border=\"default\"\n            style={{marginTop : '15px', padding : \"16px\", background : 'white',maxWidth : (isMobileOnly ? '320px' : '419.13')}}\n          >\n            <Text size={500} style={{display : \"block\"}}>\n              {resultText}\n            </Text>\n            <div style={{marginTop : '16px'}}>\n              <Pane>\n                <Dialog\n                  isShown={shareModalOpend}\n                  title=\"Выбери где отправить\"\n                  onCloseComplete={() => setModalOpend(false)}\n                  confirmLabel=\"Закрыть\"\n                  hasCancel={false}\n                >\n                  <ul>\n                    <li><TelegramShareButton url={resultText} children={<TelegramIcon borderRadius={2} size={50} round={true} />}/></li>\n                    <li><WhatsappShareButton url={resultText} children={<WhatsappIcon size={50} round={true} />}/></li>\n                    <li><EmailShareButton url={resultText} children={<EmailIcon size={50} round={true} />}/></li>\n                    <li><VKShareButton url={resultText} children={<VKIcon size={50} round={true} />}/></li>\n                  </ul>\n                </Dialog>\n                {resultText !== 'Такого имени не существует!' &&\n                  <>\n                    <CopyToClipboard text={resultText} onCopy={() => setCopy(true)}>\n                      {!copied ? <Button iconBefore=\"clipboard\">Скопировать</Button> : <Button disabled iconBefore=\"tick\">Скопировано!</Button>}\n                    </CopyToClipboard>\n                    <Button marginLeft=\"10px\" onClick={()=>setModalOpend(true)} iconBefore=\"send-to\">Отправить</Button>\n                  </>\n                }\n              </Pane>\n            </div>\n          </Pane>\n        }\n        <div style={{marginTop : '15px'}}><Text style={{color : 'gray'}}>slangfriend &copy; {year}</Text></div>\n      </div>\n    </Pane>\n  );\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorker.register();\n"],"sourceRoot":""}